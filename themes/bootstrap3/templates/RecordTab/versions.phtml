<?php
  $results = $this->driver->tryMethod('getVersions', [false, 20]);
  $view = 'list';
  $this->render('search/results-scripts.phtml', ['displayVersions' => true]);
?>
<div class="results result-view-<?=$this->escapeHtmlAttr($view)?>">
  <nav class="search-header hidden-print">
    <div class="search-stats">
      <?=
        $this->translate(
            'showing_results_of_html',
            [
              '%%start%%' => 1,
              '%%end%%' => count($results),
              '%%total%%' => $this->localizedNumber($results->getTotal()),
            ]
        );
      ?>
    </div>
    <div class="search-controls">
      <a class="more-link" href="<?=$this->escapeHtmlAttr($this->recordLinker()->getVersionsSearchUrl($this->driver))?>" rel="nofollow">
        <?=$this->icon('more') ?> <?=$this->transEsc('other_versions_search_link', ['%%count%%' => $results->getTotal() + 1])?>
      </a>
    </div>
  </nav>
  <?php $recordNumber = $results->getOffset(); ?>
  <?php foreach ($results as $current): ?>
    <div id="result<?=++$recordNumber ?>" class="result clearfix<?=$current->supportsAjaxStatus() ? ' ajaxItem' : ''?>">
      <span class="sr-only"><?=$this->transEsc('Search Result');?> <?=$recordNumber ?></span>
      <?=$this->record($current)->getSearchResult($view, $results)?>
    </div>
  <?php endforeach; ?>
  <div class="search-tools hidden-print">
    <div class="search-controls">
      <a class="more-link" href="<?=$this->escapeHtmlAttr($this->recordLinker()->getVersionsSearchUrl($this->driver))?>" rel="nofollow">
        <?=$this->icon('more') ?> <?=$this->transEsc('other_versions_search_link', ['%%count%%' => $results->getTotal() + 1])?>
      </a>
    </div>
  </div>
</div>

<?php
// Add any translations added when processing the search results:
$translations = $this->jsTranslations()->getJSON();
// Use combinedSearch.initResultScripts to avoid duplicating the list of scripts
// required for results loaded via AJAX:
$script = <<<JS
    VuFind.addTranslations($translations);
    VuFind.combinedSearch.initResultScripts($('.results'));
    JS;
?>
<?=$this->inlineScript(\Laminas\View\Helper\HeadScript::SCRIPT, $script, 'SET'); ?>
