; The PAIA driver extends the DAIA driver and uses the settings for the DAIA driver.
; Either copy & paste the settings from DAIA.ini into this PAIA.ini or reference your
; correctly configured DAIA.ini via [Parent_Config]
;[Parent_Config]
;relative_path = DAIA.ini

; PAIA configuration
[PAIA]
; base URL of the PAIA server WITH trailing slash
baseUrl = ""

; Set a PAIA specific timeout in seconds to be used for PAIA http requests (defaults
; to client defaults or as defined in
; vendor/vufind-org/vufindhttp/src/VuFindHttp/HttpService.php)
;timeout = 30

; Enable caching for PAIA items (default is false). TTL for cached data will be the
; same as for DAIA cache (see cacheLifetime setting in DAIA.ini).
;paiaCache = false

; A PAIA auth server acts as OAuth authorization server (RFC 6749) with
; password credentials grant, as defined in section 4.3 of OAuth specification,
; and/or client credentials grant, as defined in section 4.4 of the OAuth
; specification.
; Server specific grant type should be set to one of these values:
; - password (default): user-entered credentials will be passed along to
;   the PAIA server for authentication against the API.
; - client_credentials: the "shared secret" credentials provided below will always
;   be used for PAIA API authentication.
; (see also http://gbv.github.io/paia/paia.html#login for more technical details).
;
; Note: if using client_credentials it is strongly recommended to consider setting
; "allowUserLogin = false" in config.ini (section [Catalog]) as with client_credentials
; authentication likely takes place elsewhere (e.g. Shibboleth) and the user should not
; be allowed to provide login credentials after authentication succeeded (PAIA
; client_credentials will not check if username and password are matching).
;grantType = "password"

; Please insert the "shared secret" credentials provided by your PAIA server below
; when grantType is set to client_credentials above.
;clientUsername = 'client'
;clientPassword = 'password'

; Driver configuration, usually you can leave it untouched

; This section controls hold behavior; note that you must also ensure that Holds are
; enabled in the [Catalog] section of config.ini in order to take advantage of these
; settings. Additional notes about some of these settings are available in the wiki:
; https://vufind.org/wiki/configuration:ils:holds
; Without customization the PAIA driver will offer to place a recall for items with
; unavailable service loan but set href for loan. The recall will be performed via
; PAIA request.
; The pre-defined HMACKeys (id:item_id:doc_id) should suffice to place a recall. No
; extra fields are allowed (if you need those you might be able to cover this
; functionality in a custom driver by using PAIA confirm/conditions).
[Holds]
; HMACKeys - A list of form element names that will be analyzed for consistency
; during form processing. Most users should not need to change this setting.
HMACKeys = "id:item_id:doc_id"

; PAIA status which should be mapped to Holds
; status are:   1 = reserved (not available yet but later)
;               2 = ordered (and not yet ready to be picked up)
;               3 = held by patron
;               4 = provided (and ready to be picked up)
status = "1:4"

; Without customization the PAIA driver will offer to place a storageretrievalrequest
; for items with available service loan and set href for loan. The
; storageretrievalrequest will be performed via PAIA request (technically the same as
; for recall, but with different frontend templates etc.).
; The pre-defined HMACKeys (id:item_id:doc_id) should suffice to request an item. No
; extra fields are allowed (if you need those you might be able to cover this
; functionality in a custom driver by using PAIA confirm/conditions).
[StorageRetrievalRequests]
; HMACKeys - A list of form element names that will be analyzed for consistency
; during form processing. Most users should not need to change this setting.
HMACKeys = id:item_id:doc_id

; PAIA status which should be mapped to StorageRetrievalRequests
; status are:   1 = reserved (not available yet but later)
;               2 = ordered (and not yet ready to be picked up)
;               3 = held by patron
;               4 = provided (and ready to be picked up)
status = "2"

; All kinds of transactions by a specific patron. Transactions are eg checked out
; items
[Transactions]
; PAIA status which should be mapped to Transactions
; status are:   1 = reserved (not available yet but later)
;               2 = ordered (and not yet ready to be picked up)
;               3 = held by patron
;               4 = provided (and ready to be picked up)
status = "3"


; The PAIA driver supports renewals in MyResearch views. The renewal will be
; performed via PAIA renew.
; The pre-defined HMACKeys (id:item_id:doc_id) should suffice to renew an item. No
; extra fields are allowed (if you need those you might be able to cover this
; functionality in a custom driver by using PAIA confirm/conditions).
[Renewals]
; HMACKeys - A list of form element names that will be analyzed for consistency
; during form processing. Most users should not need to change this setting.
HMACKeys = "id:item_id:doc_id"
