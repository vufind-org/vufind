; This section contains global settings affecting search behavior.
[General]
default_handler      = AllFields    ; Search handler to use if none is specified

; This setting controls the default sort order of search results if no search-
; specific setting was present in the [DefaultSortingByType] section below; the
; selected option should be one of the options present in the [Sorting] section
; below.
default_sort         = relevance

; This setting controls the sort order to be used for empty search when relevance
; sort is selected. Since relevance doesn't have a meaningful function with an empty
; search, this can be set to e.g. "title".
;empty_search_relevance_override = title

; This setting controls the default view for search results; the selected option
; should be one of the options present in the [Views] section below.
default_view         = list

; This section controls the result limit options for search results. default_limit
; sets the default number of results per page. limit_options is a comma-separated
; list of numbers to be presented to the end-user. If only one limit is required,
; set default_limit and leave limit_options commented out.
; WARNING: using large limits may cause problems due to a variety of limitations,
; especially if you support bulk operations (which can cause large URLs/requests).
; If you must support large page sizes, you may need to raise the PHP memory_limit
; and max_input_vars settings and/or adjust the Apache LimitRequestLine setting.
default_limit        = 20
;limit_options        = 10,20,40,60,80,100

; This setting allows to limit pagination of a search result as deep pagination
; costs a lot of performance and most users are not very likely to navigate
; further down than 20 pages of a search result.
; This is especially useful to prevent webcrawlers from descending too deep and
; eating up search backend performance. Default is set to unlimited.
;result_limit = 400

; If this setting is true, boolean operators in searches (AND/OR/NOT) will only
; be recognized if they are ALL UPPERCASE.  If set to false, they will be
; recognized regardless of case.  If set to a comma-separated list of operators
; (e.g. "AND,NOT") then only the listed operators will be case-sensitive.
case_sensitive_bools = true

; If this setting is true, range operators in searches ([a TO b] or {a TO b})
; will only be recognized if the word "TO" is ALL UPPERCASE.  Additionally, the
; edges of the range may be treated in a case sensitive manner.  If set to false,
; ranges will be recognized regardless of case -- this will allow better matching
; at the cost of a bit of extra server-side processing.
case_sensitive_ranges = true

; These are the default recommendations modules to use when no specific setting
; are found in the [TopRecommendations], [SideRecommendations] or
; [NoResultsRecommendations] sections below.
; See the comments above those sections for details on legal settings.  You may
; repeat these lines to load multiple recommendations.
;default_top_recommend[] = MapSelection ; see [MapSelection] in geofeatures.ini.
default_top_recommend[] = TopFacets:ResultsTop
default_top_recommend[] = SpellingSuggestions
;default_top_recommend[] = VisualFacets:Visual_Settings
default_side_recommend[] = SideFacets:Results:CheckboxFacets
; SideFacetsDeferred is an alternative to SideFacets. Using it will defer loading of
; any facet until it's actually displayed. This can improve search performance and
; decrease server load especially with larger indexes.
;default_side_recommend[] = SideFacetsDeferred:Results:CheckboxFacets
;default_noresults_recommend[] = SwitchTab
default_noresults_recommend[] = SwitchType
default_noresults_recommend[] = SwitchQuery:::fuzzy
default_noresults_recommend[] = SpellingSuggestions
default_noresults_recommend[] = RemoveFilters

; Set this to true in order to highlight keywords from the search query when they
; appear in fields displayed in search results.
highlighting = true

; Set this to restrict the list of fields that will be highlighted (the hl.fl
; Solr parameter); default = '*' for all fields:
;highlighting_fields = *

; Set this to true in order to include a text snippet in the search results when
; a keyword match is found in a field that is not normally displayed as part of
; the listing.  For finer control over which fields are used for snippets, see
; the record driver code (web/RecordDrivers/IndexRecord.php).
;
; For control over snippet captions, see the [Snippet_Captions] section below.
snippets = true

; When you filter a search using facets, VuFind will present a checkbox that can
; be used to apply those filters to the next search you perform.  This setting
; controls its default state: on (true) or off (false).
retain_filters_by_default = true

; The filters listed below will be applied to all new searches by default. Omit
; this setting to have no default filters applied. These differ from hidden
; filters because they are visible in the UI and may be removed by the user.
;
; You can use complex filters (for example with boolean operators inside).
; In order to do that, just set the filter into parentheses (as in the third sample line).
;
; NOTE: If you are setting a default filter on a field that is used for OR
; facets (see the orFacets setting in facets.ini), be sure to prefix the field
; name with a tilde (~)... e.g. "~format:Book"
;default_filters[] = "format:Book"
;default_filters[] = "institution:MyInstitution"
;default_filters[] = "(format:Book AND institution:MyInstitution)"

[Cache]
; This controls whether the parsed searchspecs.yaml file will be stored to
; improve search performance; legal options are APC (use APC cache), File (store
; on disk) or false (do not cache).
type = File

; This section shows which search types will display in the basic search box at
; the top of most pages.  The name of each setting below corresponds with a
; search handler (either DisMax or from conf/searchspecs.yaml).  The value of
; each setting is the text to display on screen.  All on-screen text will be run
; through the translator, so be sure to update language files if necessary.  The
; order of these settings will be maintained in the drop-down list in the UI.
;
; Note: The search type of "tag" is a special case that gets handled differently
;       because tags are not stored in the same index as everything else.  Treat
;       this as a reserved word if you create your own custom search handlers.
[Basic_Searches]
AllFields           = "All Fields"
Title               = Title
;JournalTitle        = "Journal Title"
Author              = Author
Subject             = Subject
CallNumber          = "Call Number"
ISN                 = "ISBN/ISSN"
;Coordinate        = Coordinates
tag                 = Tag

; This section defines which search options will be included on the advanced
; search screen.  All the notes above [Basic_Searches] also apply here.
[Advanced_Searches]
AllFields           = adv_search_all
Title               = adv_search_title
;JournalTitle        = adv_search_journaltitle
Author              = adv_search_author
Subject             = adv_search_subject
CallNumber          = adv_search_callnumber
ISN                 = adv_search_isn
publisher           = adv_search_publisher
Series              = adv_search_series
year                = adv_search_year
toc                 = adv_search_toc
;Coordinate        = Coordinates


; This section defines the sort options available on standard search results.
; Values on the left of the equal sign are either the reserved term "relevance"
; or the name of a Solr index to use for sorting; asc and desc modifiers may be
; used in combination with index names, but not relevance.  To allow secondary
; sorting, you may include a comma-separated list of options (for example,
; "year desc,title asc"), but this list may NOT include the special "relevance"
; value.  Values on the right of the equal sign are text that will be run
; through the translation module and displayed on screen.
;
; Note: "year", "author" and "title" are special shortcut aliases for the
;       "publishDateSort", "author_sort" and "title_sort" Solr fields; you can
;       use either form in this file.
[Sorting]
relevance = sort_relevance
year = sort_year
year asc = "sort_year asc"

; Use the "callnumber-sort" line for LC or the "dewey-sort" line for Dewey Decimal.
; If you want to enable both systems for sorting, you can uncomment both lines,
; but you will need to add some custom text to distinguish between the two.
callnumber-sort = sort_callnumber
;dewey-sort = sort_callnumber

author = sort_author
title = sort_title

; This section allows you to specify the default sort order for specific types of
; searches.  Each key in this section should correspond with a key in the
; [Basic_Searches] section above.  Each value should correspond with a key in the
; [Sorting] section above.  Any search type that is not listed here will be sorted
; using the default_sort setting in the [General] section above.
[DefaultSortingByType]
CallNumber = callnumber-sort

; Each search type defined in searchspecs.yaml can have one or more "recommendations
; modules" associated with it in the following sections.  These plug-ins will cause
; boxes of suggestions to appear beside (in [SideRecommendations]) or above (in
; [TopRecommendations]) the search results.  The special [NoResultsRecommendations]
; are only displayed for empty search results.  You can repeat the line to display a
; series of recommendations boxes in a particular section -- just be sure to include
; brackets ("[]") after the search type name.  If you do not want recommendations
; for a particular search type, set the value to "false" in either or both sections.
; Any search types not listed here will use the default value -- see the
; default_top_recommend and default_side_recommend settings in the [General]
; section above.  It is legal to set the default options to false if you want no
; default value.
;
; Available modules recommended for use in the side area:
;
; CatalogResults:[GET parameter]:[result limit]
;       Display catalog search results matching the terms found in the specified
;       GET parameter (default = "lookfor"), limited to a specified number of
;       matches (default = 5).  This is designed for use with non-catalog modules.
; DPLATerms:[collapsed]
;       Display results from the DPLA catalog. Provide a boolean to have the sidebar
;       collapsed or open on page load.
; EuropeanaResults:[url]:[requestParam]:[limit]:[unwanted data providers]
;       Display search results from Europeana.eu API.
;       Parameters (all are optional):
;         [url] = base search URL, default api.europeana.eu/api/v2/opensearch.rss
;         [requestParam] = parameter name for passing lookup value in url, default is
;             "searchTerms"
;         [limit] = the number of result items to display (defaults to 5)
;         [unwanted data providers] = comma separated list of dataproviders to ignore
;             results from; useful for excluding your own results that are also in
;             Europeana.
;       An API key must be set in config.ini (see europeanaAPI setting in [Content]
;       section).
; EuropeanaResultsDeferred:[url]:[requestParam]:[limit]:[unwanted data providers]
;       See EuropeanaResults, but this version uses AJAX for asynchronous loading.
; ExpandFacets:[ini section]:[ini name]
;       Display facets listed in the specified section of the specified ini file;
;       if [ini name] is left out, it defaults to "facets."  Rather than using
;       facets to limit the existing search, this module uses them to start a new
;       search showing all records matching the selected facet value.
; FacetCloud:[ini section]:[ini name]
;       Same functionality as ExpandFacets, but with a more compact interface to
;       allow the display of more values.
; OpenLibrarySubjects:[GET parameter]:[limit]:[date filter]:[Subject types]
;       Display full-text, public scans from the Open Library (OL) Subjects API.
;       [GET parameter] (default = "lookfor"), [limit] (default = 5),
;       [date filter] The name of a date filter (from facet settings) to apply to
;           searches.  Defaults to "publishDate" if blank; set to "false" to disable.
;       [Subject types] (default = "topic") comma-separated list of subject types to
;           test. Open Library distinguishes between the following subject types:
;           topic,place,person,time
;       Note: an API call will be made for each type until valid data is returned
;           which will slow down the loading of the main VuFind result set,
;           see OpenLibrarySubjectsDeferred
; OpenLibrarySubjectsDeferred:[GET parameter]:[limit]:[date filter]:[Subject types]
;       The same as OpenLibrarySubjects but uses AJAX to make the API calls after the
;           main result set has loaded
; RandomRecommend:[backend]:[limit]:[display mode]:[random mode]:[minimumset]
;        :[facet1]:[facetvalue1]:[facet2]:[facetvalue2]:...:[facet-n]:[facetvalue-n]
;       This module offers random records either from the whole backend or within
;       the current resultset.
;       [backend] is the name of the search backend currently in use,
;       which will help with accurate analysis (default = Solr)
;       [limit] is the number of records to display (default = 10)
;       [display mode] determines how the records are displayed. Valid values are
;       "standard" (for a basic display including titles and authors),
;       "images" for just images or "mixed" for both. (default = standard)
;       [random mode] determines if the records are selected from the entire backend
;       or from the current result set. Valid values are "retain" to limit results
;       to the current result set or "disregard" to use the entire backend.
;       (default = retain)
;       [minimumset] is the minimum result set count required to display random items,
;       0 = no minimum required. This setting can be used to prevent random items
;       displaying in a small result set. (default = 0)
;       [facet-n] A facet to apply to the random selection
;       [facetvalue-n] The facet value to apply to the random selection
; SideFacets:[regular facet section]:[checkbox facet section]:[ini name]
;       Display the specified facets, where [ini name] is the name of an ini file
;       in your config directory (defaults to "facets" if not supplied),
;       [regular facet section] is the name of a section of the ini file containing
;       standard facet settings (defaults to "Results" if not specified),
;       and [checkbox facet section] is the name of a section of the ini file
;       containing checkbox facet settings (leave blank for no checkbox facets).
;       Checkbox facets are normally in filter => label format; prefix the section
;       name with ~ to reverse this and use label => filter format (useful if your
;       filters contain values that are illegal in configuration keys -- e.g. []).
;       Note that if you take advantage of this ~ feature, you will also need to
;       adjust the facets.ini Advanced_Settings/special_facets checkboxes setting
;       in order to properly display checkboxes on the advanced search screen.
; SpellingSuggestions
;       Display spelling suggestions (also requires Spelling settings to be turned
;       on in config.ini).
; SummonBestBets:[GET parameter]
;       Display Summon-generated "best bets" recommendations matching the terms found
;       in the specified GET parameter.  NOTE: If you are using this module with a
;       Summon search, the [GET parameter] setting will be ignored and the actual
;       current Summon search will be used instead.  The parameter only needs to be
;       specified when combining this module with a non-Summon-based search module.
; SummonBestBetsDeferred:[GET parameter]
;       Same as SummonBestBets, but loaded via AJAX.
; SummonDatabases:[GET parameter]
;       Display Summon-generated database recommendations matching the terms found
;       in the specified GET parameter.  NOTE: If you are using this module with a
;       Summon search, the [GET parameter] setting will be ignored and the actual
;       current Summon search will be used instead.  The parameter only needs to be
;       specified when combining this module with a non-Summon-based search module.
; SummonDatabasesDeferred:[GET parameter]
;       Same as SummonDatabases, but loaded via AJAX.
; SummonResults:[GET parameter]:[result limit]
;       Display Summon search results matching the terms found in the specified
;       GET parameter (default = "lookfor"), limited to a specified number of
;       matches (default = 5).
; SummonResultsDeferred:[GET parameter]:[result limit]
;       Same as SummonResults, but loaded via AJAX.
; SummonTopics:[GET parameter]
;       Display Summon-generated topic recommendations matching the terms found
;       in the specified GET parameter.  NOTE: If you are using this module with a
;       Summon search, the [GET parameter] setting will be ignored and the actual
;       current Summon search will be used instead.  The parameter only needs to be
;       specified when combining this module with a non-Summon-based search module.
; WebResults:[GET parameter]:[result limit]
;       Display website search results matching the terms found in the specified
;       GET parameter (default = "lookfor"), limited to a specified number of
;       matches (default = 5).  This requires the website Solr core to be active.
;
; Available modules recommended for use in the top area:
;
; AuthorFacets
;       Display author names based on the search term.
; AuthorInfo:[use_viaf]
;       Load author information from external providers based on the current search
;       and the "authors" setting in the [Content] section of config.ini.
;       The [use_viaf] setting may be set to true to use the VIAF web service in
;       combination with your Solr authority index to pick more appropriate authors;
;       this defaults to false if unset.  If you do not have local authority records
;       to draw on, the OCLC FAST data works well with the [use_viaf] option; see:
;       https://vufind.org/wiki/indexing:open_data_sources#oclc_fast
; AuthorityRecommend:[field1]:[query1]:[field2]:[query2]:...:[field-n]:[query-n]
;       Displays see and see also results to user based on search of Authority Index.
;       Any number of filter queries may be specified as parameters to limit which
;       set of authority records is used for recommendations; for example:
;           AuthorityRecommend:record_type:Heading* OR Topical*:source:FAST
;       limits record_type to strings starting with "Heading" or "Topical" and
;       limits source to FAST. A special field name of "__resultlimit__" may be
;       used to suppress authority results when the result set contains more items
;       than the number specified as the corresponding value (e.g. if you configure
;       AuthorityRecommend:__resultlimit__:50 then authority recommendations will
;       only display on result screens displaying fewer than 50 hits; by default,
;       recommendations will always display). A special field name of "__mode__"
;       may be used to control what type of suggestions are presented (default is
;       both seealso and usefor results, but you can turn on just one of these
;       options if desired; for example "__mode__:seealso" would only show "see
;       also" results from records whose main headings match the current search
;       terms while "__mode__:usefor" would show only main headings from records
;       whose "use for" headings match the current search. You can use "__mode__:*"
;       to turn on all options (but this is default behavior if no __mode__ is
;       set). Filtering is optional. A special field name of "__header__" may be
;       used to customize the header text above the results (default = "See also").
; Channels
;       Display a link to the Channeled Browse functionality leading to channels of
;       records related to the current search.
; MapSelection
;       Enable geographic searching capability by activating this module.
;       Records must be indexed using the geographic search and display fields.
;       See the marc_local.properties file for more information on indexing.
;       See the [MapSelection] section of the geofeatures.ini file for more information.
; PubDateVisAjax:[zooming]:[facet field 1]:[facet field 2]:...:[facet field n]
;       Display a visualization of publication dates for each of the specified facet
;       fields.  This is designed for a field containing four-digit years.  Zooming
;       is set to either true or false and controls whether or not selecting part of
;       the graph zooms in to greater detail.
; TopFacets:[ini section]:[ini name]
;       Display facets listed in the specified section of the specified ini file;
;       if [ini name] is left out, it defaults to "facets."
; VisualFacets:[ini section]:[ini name]
;        Supports visualizing pivot facet information as a treemap or circle
;        packing visualization. It must be used in combination with the "visual"
;        view in the [Views] section below -- it will only display in Visual mode.
;        [ini section] and [ini name] control where the module will load field
;        configurations from; it defaults to Visual_Settings in facets.ini.
; WorldCatIdentities
;       Use the WorldCat Identities API to find names and related subjects based
;       on the current search.
;
; Available modules recommended for use in the "no results" area:
;
; AlphaBrowseLink:index
;       Use the query to generate a link to the specified alphabrowse index
; DOI:[prefix]
;       Detect DOIs in the user search query. If a DOI makes up part of the search,
;       display a link to resolve it. If it makes up the entire query, redirect to
;       the resolver automatically. [prefix] is the URL of the resolver to which
;       the DOI itself will be appended.
; Libraryh3lp:[type]:[id]:[skin]
;       Display a chat box for the Libraryh3lp service. [type] indicats the type
;       of chat being used (either "queue" or "user"). [id] is the name of the
;       queue or user. [skin] is optional and specifies a skin number to use.
; RemoveFilters
;       Suggests removing facet filters to retrieve more results.
; SwitchQuery:[backend]:[opt-out checks to skip]:[opt-in checks to add]
;       This module analyzes the user's query and offers suggestions for ways to
;       improve it. [backend] is the name of the search backend currently in use,
;       which will help with accurate analysis (default = Solr). [opt-out checks
;       to skip] is a comma-separated list of checks which are on by default but
;       which you wish to disable. [opt-in checks to add] is a comma-separated
;       list of transforms that are off by default but which you wish to enable.
;       See the check*() methods in the module's code for a complete list of
;       available checks. The $optInMethods property specifies which checks are
;       turned off by default.
; SwitchTab
;       If multiple tabs are active, suggest that the user try searching in a
;       different one.
; SwitchType:[field]:[field description]
;       If the current search type is not the same as [field], display a link
;       suggesting that the user try switching to [field].  [field description]
;       is the human-readable description of [field].  Default values are
;       'AllFields' and 'All Fields' respectively.
;
; You can build your own recommendations modules if you wish.  See the developer's
; guide here:
;
;       https://vufind.org/wiki/development:plugins:recommendation_modules
[SideRecommendations]
; No search-specific settings by default -- add your own here.
;Subject[]          = SideFacets
;Subject[]          = OpenLibrarySubjectsDeferred:lookfor:5:true:topic,place,person,time

[TopRecommendations]
Author[]            = AuthorFacets
Author[]            = SpellingSuggestions
;Author[]           = WorldCatIdentities
CallNumber[]        = "TopFacets:ResultsTop"    ; disable spelling in this context

[NoResultsRecommendations]
CallNumber[] = SwitchQuery::wildcard:truncatechar
CallNumber[] = RemoveFilters
;CallNumber[] = AlphaBrowseLink:lcc

; These settings control the top and side recommendations within the special Author
; module (the page accessed by clicking on an author's name within the search
; results).  The Author module ignores the default_top_recommend and
; default_side_recommend settings and only uses this section.
[AuthorModuleRecommendations]
;top[] = TopFacets:ResultsTop
;side[] = SideFacets:Results:CheckboxFacets
top[] = AuthorInfo
side[] = "ExpandFacets:Author"

; This section controls the "New Items" search.
[NewItem]
; New item information can be retrieved from Solr or from the ILS; this setting
; controls which mechanism is used. If using Solr, change tracking must be enabled
; (see https://vufind.org/wiki/indexing:tracking_record_changes). If using the ILS,
; your driver must support the getNewItems() method.
; Valid options: ils, solr; default: ils
method = ils
; Comma-separated list of date ranges to offer to the user (i.e. 1,5,30 = one day
; old, or five days old, or thirty days old). If using the "ils" method, be careful
; about raising the maximum age too high -- searching very long date ranges may put
; a load on your ILS.
ranges = 1,5,30
; This setting only applies when using the "ils" method. It controls the maximum
; number of pages of results that will show up when doing a new item search.
; It is necessary to limit the number of results to avoid getting a "too many boolean
; clauses" error from the Solr index (see notes at
; https://vufind.org/jira/browse/VUFIND-128 for more details).  However, if you
; set the value too low, you may get the same results no matter which range setting
; is selected!
result_pages = 10
; This setting can be used to automatically apply filter queries to the New Item
; results.  For example, you might want to filter out certain content types.  You
; can add multiple filters by repeating the "filter[] =" line, or you can skip
; filtering entirely by leaving the line commented out.
; filter[] = "format:Book"

; This section controls RSS feed behavior
[RSS]
; If set, this setting will override sort settings associated with RSS feeds.  This
; allows you to ensure that newly added or changed items in your index appear at
; the top of the feed.  Use "first_indexed desc" if you only want newly-added items
; to be listed first.  Use "last_indexed desc" if you want newly-added-or-changed
; items.  Comment out the whole setting if you do not want custom RSS sorting.
; IMPORTANT: In order for first_indexed and last_indexed sorting to work properly,
;            you need to index record change dates; see the Wiki page at
;            https://vufind.org/wiki/indexing:tracking_record_changes
sort = "last_indexed desc"

; The following two sections control the behavior of the autocomplete drop-downs
; associated with search boxes.  The [Autocomplete] section contains global default
; settings, while the [Autocomplete_Types] section allows you to associate different
; autocomplete handlers with different search handlers.
;
; The available autocomplete handlers are:
;
; None
;       Do not provide any suggestions.  You should use this handler if you want to
;       disable suggestions for one search type while still providing suggestions
;       for other search types.  To disable suggestions completely, it is better to
;       use the "enabled" setting in the [Autocomplete] section.
; SolrAuth:[Search Handler]:[Display Field]:[Sort Field]:[Filters]
;       See Solr below -- this handler behaves exactly the same, except
;       it uses the Solr authority data index rather than the bibliographic index,
;       and its default [Display Field] value is "heading".
; Solr:[Search Handler]:[Display Field]:[Sort Field]:[Filters]
;       Perform a wildcarded search against [Search Handler], using the contents of
;       [Display Field] (a comma-separated, priority-ordered field list) as
;       suggestions and sorting by [Sort Field].  Any additional parameters at the
;       end of the string are treated as an alternating sequence of field names and
;       values for use as filters against the suggestion list.  All parameters are
;       optional.  If omitted, [Search Handler] will use the default Solr field,
;       [Display Field] will use "title", [Sort Field] will use relevance and no
;       filters will be applied.
; SolrCN
;       A customized version of Solr designed for smart handling of
;       call numbers using the custom CallNumber search handler.
; Tag
;       Provide suggestions from the local database of tags.
;
; You can build your own autocomplete modules if you wish.  See the developer's
; guide here:
;
;       https://vufind.org/wiki/development:plugins:autosuggesters
[Autocomplete]
; Set this to false to disable all autocomplete behavior
enabled = true
; This handler will be used for all search types not covered by [Autocomplete_Types]
default_handler = Solr
; Auto-submit autocomplete on click or enter
auto_submit = true

; In this section, set the key equal to a search handler from searchspecs.yaml and
; the value equal to an autocomplete handler in order to customize autocompletion
; behavior when that search type is selected.
[Autocomplete_Types]
Title = "Solr:Title"
JournalTitle = "Solr:JournalTitle"
Author = "Solr:Author:author,author2"
Subject = "Solr:Subject:topic,genre,geographic,era"
CallNumber = "SolrCN"
ISN = "Solr:ISN:isbn,issn"
Coordinate = "None"
tag = "Tag"

; When snippets are enabled, this section can be used to display captions based on
; the Solr fields from which the snippets were obtained.  Keys are the names of Solr
; fields and values are strings to display to the user.  Note that all displayed
; strings are subject to translation and should be accounted for in the language
; files found in web/lang if you are in a multilingual environment.  Fields that are
; not listed in this section will be displayed without captions, so you can comment
; out the whole section to disable captions.
[Snippet_Captions]
author2 = "Other Authors"
contents = "Table of Contents"
topic = "Subjects"
container_title = "Journal Title"

; This section allows sharding to be used to pull in content from additional Solr
; servers.  All servers used in sharding must contain the same index fields needed
; to satisfy queries sent to them AND they must all include different ID numbers!
; Leave this commented out to disable sharding.
; To use sharding, simply fill in lines using the format:
; [display name of shard] = [URL of shard (without http://)]
;[IndexShards]
;Library Catalog = localhost:8080/solr/biblio
;Website = localhost:8080/solr/website

; This section allows you to set preferences for shards display.  You only need to
; set these if you want to use shards.  See also the [StripFields] section below
; if your shards have non-identical schemas.
;[ShardPreferences]
; This setting controls whether or not to display checkboxes to allow the user to
; select which shard(s) to search (default if commented out = false)
;showCheckboxes = true
; These lines determine which shards are searched by default if the user hasn't
; specified preferences using checkboxes (default if commented out = all shards):
;defaultChecked[] = "Library Catalog"
;defaultChecked[] = "Website"

; Fields must be stripped if you have a field in your main index which is missing
; from any index includable by shards.  This section can be ignored if you are
; not using sharding or if all of your shards have identical schemas.
;
; Put in the fields to strip here in the following format:
; shard name = fieldname,another fieldname,...
[StripFields]

; This section defines the view options available on standard search results.
; If only one view is required, set default_view under [General] above, and
; leave this section commented out.
;
; Note -- when using visual view, you must also turn on the VisualFacets
; recommendation module in the top area.
;[Views]
;list = List
;grid = Grid
;visual = Visual

; This section controls what happens when a record title in a search result list
; is clicked. VuFind can either embed the full result directly in the list using
; AJAX or can display it at its own separate URL as a full HTML page.
; full - separate page (default)
; tabs - embedded using tabs (see record/ajaxview-tabs.phtml)
; accordion - embedded using an accordion (see record/ajaxview-accordion.phtml)
; NOTE: This feature is incompatible with SyndeticsPlus content; please use
;       regular Syndetics if necessary.
[List]
view=full

; This section allows for adding hidden filters. Each filter will be translated
; to format 'key:"value"' and added by Solr.php as a hidden filter (a facet that
; is always applied but is not seen by the user).  This is useful if you use a
; shared Solr index and need to display different subsets in different contexts
; (for example, a union catalog with separate VuFind instances each member).
[HiddenFilters]
;institution = "MyInstitution"

; This section is an alternative to [HiddenFilters] when you need to create more
; advanced types of filters -- i.e. complex boolean queries.  Keys are ignored,
; but increasing numeric values (1, 2, 3...) are recommended.  Values are fully-
; formed filter queries.
[RawHiddenFilters]
;0 = "format:\"Book\" OR format:\"Journal\""
;1 = "language:\"English\" OR language:\"French\""

; This section can get used to define conditional filters, i.e. filters
; that are applied under certain conditions.
; You can use a permission set as condition, which has to be defined in
; permissions.ini.
; Keys are ignored, but increasing numeric values (1, 2, 3...) are recommended.
; Values need to be formatted using this schema:
; [-]permission|filter-query
; Prefixing the condition with a minus (-) means that the filter is applied
; when the condition does not match (the permission is not granted).
; The filter may be any filter query valid for Solr.
; Examples:
; -conditionalFilter.MyUniversity|format:Book
; apply filter "format:Book" if permission conditionalFilter.MyUniversity
; (from permissions.ini) is not granted
; conditionalFilter.MyUniversity|format:Article
; apply filter "format:Article" if permission conditionalFilter.MyUniversity
; (from permissions.ini) is granted
[ConditionalHiddenFilters]
;0 = "-conditionalFilter.MyUniversity|format:Book"
;1 = "conditionalFilter.MyUniversity|format:Article"

; This section defines how records are handled when being fetched from Solr.
[Records]
; Boolean value indicating if deduplication is enabled. If true, deduplication is
; enabled. If false, dedup records are filtered out. If unspecified, deduplication
; support is completely disabled.
;deduplication = true
; Priority order (descending) for record sources (record ID prefixes separated
; from the actual record by period, e.g. testsrc.12345)
;sources = alli,testsrc

; This section defines the default parameters for the geographic search
; functionality found in the MapSelection recommendation module.
; To enable this feature, uncomment the default_top_recommend[] = MapSelection
; in the default recommendations section. To set the configuration settings
; for this feature, adjust the parameters in the geofeatures.ini file.
[MapSelection]
; These configuration settings have been superseded by the geofeatures.ini file.
; See the [MapSelection] section of the geofeatures.ini file for more information.

; This section defines settings used to fetch similar records.
[MoreLikeThis]
; Boolean value indicating whether the newer MoreLikeThis query handler should be
; used instead of the traditional MoreLikeThis component (default). Only the
; MoreLikeThis query handler supports sharded indexes, but as of this writing, the
; traditional component offers more nuanced relevance ranking. Results from these
; methods may differ.
;useMoreLikeThisHandler = true
; If the MoreLikeThis handler is used, this setting can be used to adjust its
; behavior. See https://cwiki.apache.org/confluence/display/solr/Other+Parsers#OtherParsers-MoreLikeThisQueryParser
; for more information regarding the possible parameters.
;params = "qf=title,title_short,callnumber-label,topic,language,author,publishDate mintf=1 mindf=1";
; This setting can be used to limit the maximum number of suggestions. Default is 5.
;count = 5

; This section controls the behavior of the Search/Home screen.
[HomePage]
; Content blocks can be selected from the list below:
;
; Channels:[source] - Display the homepage channels for the specified [source].
; [source] defaults to Solr.
;
; FacetList:[source]:[column size] - Display a list of facet values
; drawn from the [source] backend, with a maximum of [column size] values per
; column. [source] defaults to Solr and [column size] defaults to 10.
;
; IlsStatusMonitor:[target] - Performs an AJAX health check of the ILS and
; prepends a warning message to the HTML element identified by the jQuery selector
; provided in [target] (which defaults to .searchHomeContent.
content[] = IlsStatusMonitor
content[] = FacetList
