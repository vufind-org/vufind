; Settings for Content Security Policy header; you can learn more here:
; https://vufind.org/wiki/administration:security:content_security_policy
[CSP]
; It is possible to use CSP in report-only mode. See report-to setting below.
; This setting could be set differently for each APPLICATION_ENV value (written as
; array key below). Please note, that Whoops error handler (enabled in development
; mode) does not show correctly when report_only is false.
report_only[production] = true
report_only[development] = true

; The nonce (number used once) - unique number for each request, it is strongly
; recommend to keep this setting on
use_nonce = true

; Directives; you can find a list of available directives on this page:
; https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
; For evaluation of CSP you can use this tool provided by Google:
; https://csp-evaluator.withgoogle.com/
; See also the VuFind wiki for additional recommendations and tools:
; https://vufind.org/wiki/administration:security:content_security_policy
[Directives]
default-src[] = "'none'"
script-src[] = "'strict-dynamic'"
script-src[] = "'unsafe-inline'"
script-src[] = "http:"
script-src[] = "https:"
connect-src[] = "'self'"
style-src[] = "'self'"
style-src[] = "'unsafe-inline'"
img-src[] = "'self'"
; If you are using MapSelection recommendation module, uncommnent a line below
; for basemap you are using:
;img-src[] = "https://maps.wikimedia.org"
;img-src[] = "http://tile.stamen.com"
;img-src[] = "http://basemaps.cartocdn.com"
font-src[] = "'self'"
base-uri[] = "'self'"
; Set URI which browser should use to report CSP violation; you should provide URL
; when you enable report_only
;report-to[] = 'https://example.report-uri.com'
