; DAIA driver expects a DAIA Query API as specified in:
; http://gbv.github.io/daiaspec/daia.html#query-api
;
; The settings in the [DAIA] section will be used for all DAIA requests.
; The name of this section got refactored with VuFind 2.4.
;
; A default DAIA call looks like this:
; https://daia.myuniversity.edu/?id=ppn:12345678&format=json
;
; This default DAIA call would be configured as:
; [DAIA]
; baseUrl = https://daia.myuniversity.edu
; daiaidprefix = ppn:
; daiaResponseFormat = json
;

[DAIA]
; The base URL for the DAIA webservice.
baseUrl = [your DAIA server base url]

; The prefix prepended to the VuFind record Id resulting in the document URI
; used for the DAIA request (default = ppn:) (the prefix usually defines the
; field which the DAIA server uses for the loookup - e.g. ppn: or isbn:).
;daiaIdPrefix = "ppn:"

; Set the requested DAIA response format: xml (default), json
;daiaResponseFormat = xml

; Set multiQuery to true if your DAIA webservice supports queries with multiple
; ids (cf. http://gbv.github.io/daiaspec/daia.html#query-api).
; Default is false.
;multiQuery = false

; If daiaContentTypes are set, the DAIA driver checks the Content-Type
; line in the DAIA response HTTP header for the configured values. If
; daiaContentTypes is not set, Content-Type HTTP header is NOT checked.
; 
; expected Content-Types for DAIA XML format:
; (separate multiple values by commas, for example:
; daiaContentTypes['xml'] = "application/xml, text/xml"
daiaContentTypes['xml'] = "application/xml"

; expected Content-Types for DAIA JSON format:
; (separate multiple values by commas, for example:
; daiaContentTypes['json'] = "application/json, application/javascript"
daiaContentTypes['json'] = "application/json"
