; DAIA driver expects a DAIA Query API as specified in:
; https://gbv.github.io/daia/
;
; The settings in the [DAIA] section will be used for all DAIA requests.
; The name of this section got refactored with VuFind 2.4.
;
; A default DAIA call looks like this:
; https://daia.myuniversity.edu/?id=ppn:12345678&format=json
;
; This default DAIA call would be configured as:
; [DAIA]
; baseUrl = https://daia.myuniversity.edu
; daiaidprefix = ppn:
; daiaResponseFormat = json
;

; This section contains settings applying to DAIA and its deriving classes such as
; PAIA.
;[General]
; Set the time to live (ttl) for cached data (default is 30 seconds).
;cacheLifetime = 90

[DAIA]
; The base URL for the DAIA webservice.
baseUrl = [your DAIA server base url]

; Set a DAIA specific timeout in seconds to be used for DAIA http requests (defaults
; to Zend defaults or as defined in
; vendor/vufind-org/vufindhttp/src/VuFindHttp/HttpService.php)
;timeout = 30

; The prefix prepended to the VuFind record Id resulting in the document URI
; used for the DAIA request (default = ppn:) (the prefix usually defines the
; field which the DAIA server uses for the loookup - e.g. ppn: or isbn:).
;daiaIdPrefix = "ppn:"

; Set the requested DAIA response format: xml (default), json
;daiaResponseFormat = xml

; Set multiQuery to true if your DAIA webservice supports queries with multiple
; ids (cf. https://gbv.github.io/daia/daia.html#query-parameters).
; Default is false.
;multiQuery = false

; If daiaContentTypes are set, the DAIA driver checks the Content-Type
; line in the DAIA response HTTP header for the configured values. If
; daiaContentTypes is not set, Content-Type HTTP header is NOT checked.
;
; expected Content-Types for DAIA XML format:
; (separate multiple values by commas, for example:
; daiaContentTypes['xml'] = "application/xml, text/xml"
daiaContentTypes['xml'] = "application/xml"

; expected Content-Types for DAIA JSON format:
; (separate multiple values by commas, for example:
; daiaContentTypes['json'] = "application/json, application/javascript"
daiaContentTypes['json'] = "application/json"

; Enable caching for DAIA items (default is false).
;daiaCache = false

; DAIA does not support placing holds (this functionality is covered by PAIA) but is
; able to provide a link to the OPAC to perform such an action. Regarding placing
; holds/recalls such link is usually given as href for an unavailable service.
; Uncomment the below section Holds with the setting 'function' to show a link to
; the OPAC (if it was provided in the DAIA response) instead of a VuFind
; Holds-Button.
; If PAIA is used in combination with the DAIA driver, handling holds etc. should be
; left to the logic in the PAIA driver - thus keep this section commented out if you
; are using PAIA as well.
; [Holds]
; function = getHoldLink
