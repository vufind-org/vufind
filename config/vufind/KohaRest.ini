[Catalog]
; The API address without any version such as v1
host = "http://koha-server/api"
; N.B. Make sure the RestOAuth2ClientCredentials preference is enabled in Koha, and
; that the Koha server has the Net::OAuth2::AuthorizationServer cpan module
; installed (minimum version 0.16).
; See https://bugs.koha-community.org/bugzilla3/show_bug.cgi?id=20624 for more
; information.
;
; If Koha returns a "401 Session has been expired" error with OAuth2, Koha's
; Apache server may be removing the Authorization header from incoming requests.
; Add the following line to the virtual host configuration in Koha's Apache to make
; it pass the header through to Koha:
;
; SetEnvIf Authorization .+ HTTP_AUTHORIZATION=$0
;
; You should create a Koha user for the API with at least the following privileges:
; - circulate_remaining_permissions
; - catalogue
;- borrowers
;  - edit_borrowers
;  - view_borrower_infos_from_any_libraries
;- reserveforothers
;- modify_holds_priority
;- place_holds
;- updatecharges
;  - payout
;  - remaining_permissions
;
; Add an API key to the user and copy the values below:
; OAuth2 client ID
clientId = ""
; OAuth2 client secret
clientSecret = ""

[Holds]
; HMACKeys - A list of hold form element names that will be analyzed for consistency
; during hold form processing. Most users should not need to change this setting.
HMACKeys = item_id:holdtype:level

; defaultRequiredDate - A colon-separated list used to set the default "not required
; after" date for holds in the format days:months:years
; e.g. 0:1:0 will set a "not required after" date of 1 month from the current date
defaultRequiredDate = 0:0:2

; extraHoldFields - A colon-separated list used to display extra visible fields in the
; place holds form. Supported values are "requiredByDate" and "pickUpLocation"
extraHoldFields = requiredByDate:pickUpLocation

; A Pick Up Location Code used to pre-select the pick up location drop down list and
; provide a default option if others are not available. Must be one of the following:
; 1) empty string to indicate that the first location is default (default setting)
; 2) "user-selected" to indicate that the user always has to choose the location
; 3) a value within the Location IDs returned by getPickUpLocations()
defaultPickUpLocation = ""

; By default the pick up location list is sorted alphabetically. This setting can be
; used to manually set the order by entering location IDs as a colon-separated list.
; You can also disable sorting by setting this to false.
;pickUpLocationOrder = 158:155

; This setting can be used to exclude locations from the pickup location list
;excludePickupLocations = 1:6:10:15

; This section controls article request behavior. To enable, uncomment (at minimum)
; the HMACKeys and extraFields settings below.
[StorageRetrievalRequests]
; Whether to allow article requests on checked out items. Default is false.
;allow_checked_out = true

; HMACKeys - A list of form element names that will be analyzed for consistency
; during form processing. Most users should not need to change this setting.
HMACKeys = item_id:holdings_id:StorageRetrievalRequest

; extraFields - A colon-separated list used to display extra visible fields in the
; place request form. Supported values are "comments", "pickUpLocation",
; "item-issue" and "acceptTerms"
extraFields = item-issue:acceptTerms:pickUpLocation

; Optional help texts that can be displayed on the request form
helpText = "Help text for all languages."
;helpText[en-gb] = "Help text for English language."

; Optional label for the "acceptTerms" extra field
acceptTermsText = "I accept the terms in any language."
;acceptTermsText[en-gb] = "I accept the terms in English."

; This section allows modification of the default mappings from item status codes to
; VuFind item statuses
[ItemStatusMappings]
;Item::Held = "Held"
; Custom "Not For Loan" statuses can be mapped by appending the authorized value to
; the status key like this (first one is negative authorized value, second one is
; positive):
;Item::NotForLoan-1 = "Ordered"
;Item::NotForLoan4 = "At Bindery"
; Also "Not For Loan" item types can be mapped by appending the authorized value to
; the status key like this:
;ItemType::NotForLoan1 = "Reference Desk"

; Uncomment the following lines to enable password (PIN) change
;[changePassword]
; PIN change parameters. The default limits are taken from the interface documentation.
;minLength = 4
;maxLength = 4
; See the password_pattern/password_hint settings in the [Authentication] section
; of config.ini for notes on these settings. When set here, these will override the
; config.ini defaults when Voyager is used for authentication.
;pattern = "numeric"
;hint = "Your optional custom hint can go here."
