[Catalog]
; Base URL for the XC NCIP Toolkit's NCIP responder:
url         = http://myuniversity.edu:8080/ncipv2/NCIPResponder

; Your library's Agency ID (ILSDefaultAgency setting in driver_config.properties):
agency      = "My University"

; Agency associated with your VuFind instance
;fromAgency = 'My discovery portal'

; Pickup location definitions: Could be loaded from CSV file or from NCIP responder.
; If the target system does not support location, you could leave both settings
; commented out. In other case you will need to set one of two settings below.
;
;     Format: [agency],[locationID],[locationDisplay]
;
;     e.g.,
;         (for consortium=false)
;         My University,1,Main Circulation Desk
;         My University,2,Stacks
;
;     e.g.,
;         (for consortium=true)
;         Agency1,1,Agency1 - Main Circulation Desk
;         Agency1,2,Agency1 - Stacks
;         Agency2,11,Agency2 - Main Circulation Desk
;         Agency2,12,Agency2 - Stacks
;pickupLocationsFile = "XCNCIP2_locations.txt"

; If the NCIP responder is able to return pickup locations through the Lookup Agency
; service, you could comment out the pickupLocationsFile and set
; pickLocationFromNCIP to true. Pickup locations will be loaded by NCIP call then.
;pickupLocationsFromNCIP = true

; If you want to disable renewals functionality uncomment line below
;disableRenewals = true

;-----------------------------------------------------------------
; Consortium settings below:
;-----------------------------------------------------------------

; Is this a consortium?
consortium  = false

; If consortium is true, list all valid agencies
;agency[]  = "Agency1"
;agency[]  = "Agency2"

; Configuration for alternative OAuth2 authentication
;tokenEndpoint = ""
; API client id for OAuth2 authentication
;clientId = ""
; API client secret for OAuth2 authentication
;clientSecret = ""
; If your token endpoint accepts credentials sent through Authorization: Basic
; header instead of more usual POST, you will need to enable this
;tokenBasicAuth = true

; Configuration for HTTP basic authentication
;httpBasicAuth = true
;username = my_user
;password = my_password

; Translation domain to use for codes/strings coming from NCIP responder. Defaults
; to 'ILSMessages'
;translationDomain = "ILSMessages"

; Accepted HTTP status codes other than 2xx, which could be accepted as correct
; response. Some NCIP servers could return some 4xx codes similar to REST API
; (like 404 Not found) altogether with correct XML in response body.
;otherAcceptedHttpStatusCodes[] = "400,404"

; Max number of pages taken from API at once. Sometimes NCIP responders could
; paginate even if we want all data at one time. We then ask for all pages, but it
; could possibly lead to long response times. (Default = 0, meaning no limit).
;maxNumberOfPages = 10

; Which subelements of Problem element show to user when placing hold fails.
; Possible values are: 'ProblemType', 'ProblemDetail', 'ProblemElement',
; 'ProblemValue'
;holdProblemsDisplay = 'ProblemType,ProblemDetail';

; This section controls hold behavior; note that you must also ensure that Holds are
; enabled in the [Catalog] section of config.ini in order to take advantage of these
; settings. Additional notes about some of these settings are available in the wiki:
; https://vufind.org/wiki/configuration:ils:holds
[Holds]
; HMACKeys - A list of hold form element names that will be analyzed for consistency
; during hold form processing. Most users should not need to change this setting.
;HMACKeys = item_id:holdtype:item_agency_id:id:bib_id'

; defaultRequiredDate - A colon-separated list used to set the default "not required
; after" date for holds in the format days:months:years
; e.g. 0:1:0 will set a "not required after" date of 1 month from the current date.
; You may prefix this string with "driver:" to attempt to load a default date from
; the ILS based on internal rules instead of calculating one in VuFind; if the ILS
; call fails, the relative rules will still be used.
; e.g. "driver:0:1:0" tries to get the date from the ILS and uses one month from the
; current date as a fallback.
;defaultRequiredDate = 0:2:0

; extraHoldFields - A colon-separated list used to display extra visible fields in the
; place holds form. Supported values are "comments", "requiredByDate" and
; "pickUpLocation"
;extraHoldFields = comments:pickUpLocation:requiredByDate

; Optional help texts that can be displayed on the hold form. Displayed as is;
; HTML tags can be used, and everything needs to be properly escaped.
;helpText[*] = "Default help text used if not overridden."
;helpText[en-gb] = "Help text for British English localization."

; This section controls article request behavior. To enable, uncomment (at minimum)
; the HMACKeys and extraFields settings below.
[StorageRetrievalRequests]
; Whether to allow article requests on checked out items. Default is false.
;allow_checked_out = true

; HMACKeys - A list of form element names that will be analyzed for consistency
; during form processing. Most users should not need to change this setting.
;HMACKeys = id:item_id:item_agency_id:id:bib_id

; defaultRequiredDate - A colon-separated list used to set the default "not required
; after" date for holds in the format days:months:years
; e.g. 0:1:0 will set a "not required after" date of 1 month from the current date.
; You may prefix this string with "driver:" to attempt to load a default date from
; the ILS based on internal rules instead of calculating one in VuFind; if the ILS
; call fails, the relative rules will still be used.
; e.g. "driver:0:1:0" tries to get the date from the ILS and uses one month from the
; current date as a fallback.
;defaultRequiredDate = 0:2:0

; extraFields - A colon-separated list used to display extra visible fields in the
; place request form. Supported values are "comments", "pickUpLocation",
; "item-issue" and "acceptTerms"
;extraFields = comments:pickUpLocation:requiredByDate:item-issue

; Optional help texts that can be displayed on the request form. Displayed as is;
; HTML tags can be used, and everything needs to be properly escaped.
;helpText[*] = "Help text for all languages."
;helpText[en-gb] = "Help text for British English localization."
