; This file could be used to define configuration of markdown to HTML converter.
; More detailed configuration documentation could be found here:
; https://commonmark.thephpleague.com/2.3/configuration/
[Markdown]
; How to handle HTML input. Options are: strip, allow, escape. Defaults to strip
;html_input = allow
; Remove risky link and image URLs by setting this to false. Defaults to false
;allow_unsafe_links = true
; String to use for separating renderer block elements
;renderer[block_separator] = "\n"
; String to use for separating inner block contents
;renderer[inner_separator] = "\n"
; String to use for rendering soft breaks
;renderer[soft_break] = "\n"
; The maximum nesting level for blocks (default: infinite). Setting this to a
; positive integer can help protect against long parse times and/or segfaults if
; blocks are too deeply-nested.
;max_nesting_level = 10

; Which extension you want to activate. List of extension names separated by comma.
; Available extensions as of league/commonmark version 2.3:
;   Attributes, Autolink, DefaultAttributes, DescriptionList, DisallowedRawHtml,
;   ExternalLink, Footnote, FrontMatter, HeadingPermalink, Mention, SmartPunct,
;   Strikethrough, Table, TableOfContents, TaskList.
; More about extensions: https://commonmark.thephpleague.com/2.3/extensions/overview/
; Some of them could have a configuration, see sections below.
; Note: FrontMatter does enable to inject the title other then main heading. Just add
; something like this at the very beginning of your markdown file:
;---
;title: "Some specific title"
;---
; See more about FrontMatter extension here:
; https://commonmark.thephpleague.com/2.3/extensions/front-matter/
;
; You can also use own extensions, just address it using fully qualified class name
; like 'VuFindLocalModule\Markdown\ExampleExtension'. If your extension is
; configurable you need to add configuration section identified also by fully
; qualified name. For example: '[VuFindLocalModule\Markdown\ExampleExtension]', and
; with 'config_key' with value of configuration key, in which your extension expects
; its configuration. More about custom extension configuration:
; https://commonmark.thephpleague.com/2.3/customization/configuration/
extensions = Autolink,DisallowedRawHtml,Strikethrough,Table,TaskList

; CommonMarkCore extension is always enabled by default
[CommonMarkCore]
; Enable or disable <em> parsing. Enabled by default
;enable_em = false
; Enable or disable <strong> parsing. Enabled by default
;enable_strong = false
; Enable or disable parsing of '*' for emphasis. Enabled by default
;use_asterisk = false
; Enable or disable parsing of '_' for emphasis. Enabled by default
;use_underscore = false
; Array of characters that can be used to indicated a bulleted list (default:
; ["-", "*", "+"])
;unordered_list_markers[] = "-"
;unordered_list_markers[] = "*"
;unordered_list_markers[] = "+"

; See https://commonmark.thephpleague.com/2.3/extensions/default-attributes/
[DefaultAttributes]
; Example configuration:
;League\CommonMark\Extension\Table\Table[class] = 'table'
;League\CommonMark\Extension\CommonMark\Node\Inline\Link[target] = '_blank'

; See https://commonmark.thephpleague.com/2.3/extensions/disallowed-raw-html/
[DisallowedRawHtml]
; Default configuration, to enable any tag, just comment out the appropriate line
disallowed_tags[] = "title"
disallowed_tags[] = "textarea"
disallowed_tags[] = "style"
disallowed_tags[] = "xmp"
disallowed_tags[] = "iframe"
disallowed_tags[] = "noembed"
disallowed_tags[] = "noframes"
disallowed_tags[] = "script"
disallowed_tags[] = "plaintext"

; See https://commonmark.thephpleague.com/2.3/extensions/external-links/
[ExternalLink]
; This should be always set, if you want to use this extension. You can use regular
; expressions to match group of hosts
internal_hosts[] = www.example.com
;open_in_new_window = true
;html_class = external-link
;nofollow =
;noopener = external
;noreferrer = external

; See https://commonmark.thephpleague.com/2.3/extensions/footnotes/
[Footnote]
;backref_class = footnote-backref
;backref_symbol = '↩'
;container_add_hr = true
;container_class = footnotes
;ref_class = footnote-ref
;ref_id_prefix = 'fnref:'
;footnote_class = footnote
;footnote_id_prefix = 'fn:'

; See https://commonmark.thephpleague.com/2.3/extensions/heading-permalinks/
[HeadingPermalink]
; There is also 'slug_normalizer' options, which should be set to an object
; implementing League\CommonMark\Normalizer\TextNormalizerInterface
; If you need to use it, you'll have to extend VuFind\Service\MarkdownFactory
; and add it in the code
;html_class = heading-permalink
;id_prefix = content
;fragment_prefix = content
;insert = before
;min_heading_level = 1
;max_heading_level = 6
;title = Permalink
;symbol = '¶'
;aria-hidden = false

; See https://commonmark.thephpleague.com/2.3/extensions/mentions/
[Mention]
; This is an example of configuration, see more details in original documentation
;github_handle[prefix] = '@'
;github_handle[pattern] = '/^[a-z\d](?:[a-z\d]|-(?=[a-z\d])){0,38}(?!\w)/'
;github_handle[generator] = 'https://github.com/%s'

; See https://commonmark.thephpleague.com/2.3/extensions/smart-punctuation/
[SmartPunct]
;double_quote_opener = '“'
;double_quote_closer = '”'
;single_quote_opener = '‘'
;single_quote_closer = '’'

; See https://commonmark.thephpleague.com/2.3/extensions/table-of-contents/
[TableOfContents]
;html_class = table-of-contents
;position = top
;style = bullet
;min_heading_level = 1
;max_heading_level = 6
;normalize = relative
;placeholder =

; See https://commonmark.thephpleague.com/2.3/extensions/tables/
[Table]
;wrap[enabled] = true
;wrap[tag] = 'div'
; This setting key should be [attributes][<attrribute name>], but is not possible
; to define it in ini file, so this is fixed later in code. More attributes
; definitions need to separated by coma
;wrap[attributes] = 'class:table-responsive,title:table'
