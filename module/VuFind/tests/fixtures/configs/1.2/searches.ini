; This section contains global settings affecting search behavior.
[General]
default_handler      = AllFields    ; Search handler to use if none is specified

; This setting controls the default sort order of search results if no search-
; specific setting was present in the [DefaultSortingByType] section below; the
; selected option should be one of the options present in the [Sorting] section
; below.
default_sort         = relevance

; This setting controls the default view for search results; the selected option
; should be one of the options present in the [Views] section below.
default_view         = list

; This section controls the result limit options for search results. default_limit
; sets the default number of results per page. limit_options is a comma-separated
; list of numbers to be presented to the end-user. If only one limit is required,
; set default_limit and leave limit_options commented out.
; WARNING: using large limits (i.e. greater than 20) may interfere with some book
; preview options (i.e. HathiTrust) and may require you to raise your PHP memory
; limits to avoid errors.
default_limit        = 20
;limit_options        = 10,20,40,60,80,100

; If this setting is true, boolean operators in searches (AND/OR/NOT) will only
; be recognized if they are ALL UPPERCASE.  If set to false, they will be
; recognized regardless of case.
case_sensitive_bools = true

; If this setting is true, range operators in searches ([a TO b] or {a TO b})
; will only be recognized if the word "TO" is ALL UPPERCASE.  Additionally, the
; edges of the range may be treated in a case sensitive manner.  If set to false,
; ranges will be recognized regardless of case -- this will allow better matching
; at the cost of a bit of extra server-side processing.
case_sensitive_ranges = true

; These are the default recommendations modules to use when no specific setting
; are found in the [TopRecommendations] or [SideRecommendations] sections below.
; See the comments above those sections for details on legal settings.  You may
; repeat these lines to load multiple recommendations.
default_top_recommend[] = TopFacets:ResultsTop
default_side_recommend[] = SideFacets:Results:CheckboxFacets

; Set this to true in order to highlight keywords from the search query when they
; appear in fields displayed in search results.
highlighting = true

; Set this to true in order to include a text snippet in the search results when
; a keyword match is found in a field that is not normally displayed as part of
; the listing.  For finer control over which fields are used for snippets, see
; the record driver code (web/RecordDrivers/IndexRecord.php).
;
; For control over snippet captions, see the [Snippet_Captions] section below.
snippets = true

; When you filter a search using facets, VuFind will present a checkbox that can
; be used to apply those filters to the next search you perform.  This setting
; controls its default state: on (true) or off (false).
retain_filters_by_default = true

[Cache]
; This controls whether the parsed searchspecs.yaml file will be stored to
; improve search performance; legal options are APC (use APC cache), File (store
; on disk) or false (do not cache).
type = File

; This section shows which search types will display in the basic search box at
; the top of most pages.  The name of each setting below corresponds with a
; search handler (either DisMax or from conf/searchspecs.yaml).  The value of
; each setting is the text to display on screen.  All on-screen text will be run
; through the translator, so be sure to update language files if necessary.  The
; order of these settings will be maintained in the drop-down list in the UI.
;
; Note: The search type of "tag" is a special case that gets handled differently
;       because tags are not stored in the same index as everything else.  Treat
;       this as a reserved word if you create your own custom search handlers.
[Basic_Searches]
AllFields           = "All Fields"
Title               = Title
;JournalTitle        = "Journal Title"
Author              = Author
Subject             = Subject
CallNumber          = "Call Number"
ISN                 = "ISBN/ISSN"
tag                 = Tag

; This section defines which search options will be included on the advanced
; search screen.  All the notes above [Basic_Searches] also apply here.
[Advanced_Searches]
AllFields           = adv_search_all
Title               = adv_search_title
;JournalTitle        = adv_search_journaltitle
Author              = adv_search_author
Subject             = adv_search_subject
CallNumber          = adv_search_callnumber
ISN                 = adv_search_isn
publisher           = adv_search_publisher
Series              = adv_search_series
year                = adv_search_year
toc                 = adv_search_toc

; This section defines the sort options available on standard search results.
; Values on the left of the equal sign are either the reserved term "relevance"
; or the name of a Solr index to use for sorting; asc and desc modifiers may be
; used in combination with index names, but not relevance.  To allow secondary
; sorting, you may include a comma-separated list of options (for example,
; "year desc,title asc"), but this list may NOT include the special "relevance"
; value.  Values on the right of the equal sign are text that will be run
; through the translation module and displayed on screen.
;
; Note: "year", "author" and "title" are special shortcut aliases for the
;       "publishDate", "authorStr" and "title_sort" Solr fields; you can use
;       either form in this file.
[Sorting]
relevance = sort_relevance
year = sort_year
year asc = "sort_year asc"

; Use the "callnumber" line for LC or the "dewey-sort" line for Dewey Decimal.
; If you want to enable both systems for sorting, you can uncomment both lines,
; but you will need to add some custom text to distinguish between the two.
callnumber = sort_callnumber
;dewey-sort = sort_callnumber

author = sort_author
title = sort_title

; This section allows you to specify the default sort order for specific types of
; searches.  Each key in this section should correspond with a key in the
; [Basic_Searches] section above.  Each value should correspond with a key in the
; [Sorting] section above.  Any search type that is not listed here will be sorted
; using the default_sort setting in the [General] section above.
[DefaultSortingByType]
CallNumber = callnumber

; Each search type defined in searchspecs.yaml can have one or more "recommendations
; modules" associated with it in the following sections.  These plug-ins will cause
; boxes of suggestions to appear beside (in [SideRecommendations]) or above (in
; [TopRecommendations]) the search results.  You can repeat the line to display a
; series of recommendations boxes in a particular section -- just be sure to include
; brackets ("[]") after the search type name.  If you do not want recommendations
; for a particular search type, set the value to "false" in either or both sections.
; Any search types not listed here will use the default value -- see the
; default_top_recommend and default_side_recommend settings in the [General]
; section above.  It is legal to set the default options to false if you want no
; default value.
;
; Available modules recommended for use in the side area:
;
; CatalogResults:[GET parameter]:[result limit]
;       Display catalog search results matching the terms found in the specified
;       GET parameter (default = "lookfor"), limited to a specified number of
;       matches (default = 5).  This is designed for use with non-catalog modules.
; ExpandFacets:[ini section]:[ini name]
;       Display facets listed in the specified section of the specified ini file;
;       if [ini name] is left out, it defaults to "facets."  Rather than using
;       facets to limit the existing search, this module uses them to start a new
;       search showing all records matching the selected facet value.
; SideFacets:[regular facet section]:[checkbox facet section]:[ini name]
;       Display the specified facets, where [ini name] is the name of an ini file
;       in web/conf (defaults to "facets" if not supplied), [regular facet section]
;       is the name of a section of the ini file containing standard facet settings
;       (defaults to "Results" if not specified), and [checkbox facet section] is
;       the name of a section of the ini file containing checkbox facet settings
;       (leave blank for no checkbox facets).
; SummonDatabases:[GET parameter]
;       Display Summon-generated database recommendations matching the terms found
;       in the specified GET parameter.  NOTE: If you are using this module with a
;       Summon search, the [GET parameter] setting will be ignored and the actual
;       current Summon search will be used instead.  The parameter only needs to be
;       specified when combining this module with a non-Summon-based search module.
; SummonResults:[GET parameter]:[result limit]
;       Display Summon search results matching the terms found in the specified
;       GET parameter (default = "lookfor"), limited to a specified number of
;       matches (default = 5).
;
; Available modules recommended for use in the top area:
;
; AuthorFacets
;       Display author names based on the search term.
; TopFacets:[ini section]:[ini name]
;       Display facets listed in the specified section of the specified ini file;
;       if [ini name] is left out, it defaults to "facets."
; WorldCatIdentities
;       Use the WorldCat Identities API to find names and related subjects based
;       on the current search.
; WorldCatTerms:[vocabulary]
;       Use the WorldCat Terminologies API to find Library of Congress Subject
;       Headings related to the current search.  [vocabulary] is the vocabulary to
;       use for recommendations; default is "lcsh" but other options include "fast",
;       "mesh", etc.  See http://tspilot.oclc.org/resources/ for details.
; OpenLibrarySubjects:[GET parameter]:[limit]:[date filter]:[Subject types]
;       Display full-text, public scans from the Open Library (OL) Subjects API.
;       [GET parameter] (default = "lookfor"), [limit] (default = 5),
;       [date filter] The name of a date filter (from facet settings) to apply to
;           searches.  Defaults to "publishDate" if blank; set to "false" to disable.
;       [Subject types] (default = "topic") comma-separated list of subject types to
;           test. Open Library distinguishes between the following subject types:
;           topic,place,person,time
;       Note: an API call will be made for each type until valid data is returned
;           which will slow down the loading of the main VuFind result set,
;           see OpenLibrarySubjectsDeferred
; OpenLibrarySubjectsDeferred:[GET parameter]:[limit]:[date filter]:[Subject types]
;       The same as OpenLibrarySubjects but uses AJAX to make the API calls after the
;           main result set has loaded
;
; You can build your own recommendations modules if you wish.  See the developer's
; guide here:
;
;       https://vufind.org/wiki/development:plugins:recommendation_modules
[SideRecommendations]
; No search-specific settings by default -- add your own here.
;Subject[]          = SideFacets
;Subject[]          = OpenLibrarySubjectsDeferred:lookfor:5:true:topic,place,person,time

[TopRecommendations]
Author[]            = AuthorFacets
;Author[]           = WorldCatIdentities
;Subject[]          = WorldCatTerms

; These settings control the top and side recommendations within the special Author
; module (the page accessed by clicking on an author's name within the search
; results).  The Author module ignores the default_top_recommend and
; default_side_recommend settings and only uses this section.
[AuthorModuleRecommendations]
;top[] = TopFacets:ResultsTop
;side[] = SideFacets:Results:CheckboxFacets
side[] = "ExpandFacets:Author"

; This section controls the "New Items" search.
[NewItem]
; Comma-separated list of date ranges to offer to the user (i.e. 1,5,30 = one day
; old, or five days old, or thirty days old).  Be careful about raising the maximum
; age too high -- searching very long date ranges may put a load on your ILS.
ranges = 1,5,30
; This setting controls the maximum number of pages of results that will show up
; when doing a new item search.  It is necessary to limit the number of results to
; avoid getting a "too many boolean clauses" error from the Solr index (see notes
; at https://vufind.org/jira/browse/VUFIND-128 for more details).  However, if you
; set the value too low, you may get the same results no matter which range setting
; is selected!
result_pages = 10
; This setting can be used to automatically apply filter queries to the New Item
; results.  For example, you might want to filter out certain content types.  You
; can add multiple filters by repeating the "filter[] =" line, or you can skip
; filtering entirely by leaving the line commented out.
; filter[] = "format:Book"

; This section controls RSS feed behavior
[RSS]
; If set, this setting will override sort settings associated with RSS feeds.  This
; allows you to ensure that newly added or changed items in your index appear at
; the top of the feed.  Use "first_indexed desc" if you only want newly-added items
; to be listed first.  Use "last_indexed desc" if you want newly-added-or-changed
; items.  Comment out the whole setting if you do not want custom RSS sorting.
; IMPORTANT: In order for first_indexed and last_indexed sorting to work properly,
;            you need to index record change dates; see the Wiki page at
;            https://vufind.org/wiki/indexing:tracking_record_changes
sort = "last_indexed desc"

; The following two sections control the behavior of the autocomplete drop-downs
; associated with search boxes.  The [Autocomplete] section contains global default
; settings, while the [Autocomplete_Types] section allows you to associate different
; autocomplete handlers with different search handlers.
;
; The available autocomplete handlers are:
;
; NoAutocomplete
;       Do not provide any suggestions.  You should use this handler if you want to
;       disable suggestions for one search type while still providing suggestions
;       for other search types.  To disable suggestions completely, it is better to
;       use the "enabled" setting in the [Autocomplete] section.
; SolrAuthAutocomplete:[Search Handler]:[Display Field]:[Sort Field]:[Filters]
;       See SolrAutocomplete below -- this handler behaves exactly the same, except
;       it uses the Solr authority data index rather than the bibliographic index,
;       and its default [Display Field] value is "heading".
; SolrAutocomplete:[Search Handler]:[Display Field]:[Sort Field]:[Filters]
;       Perform a wildcarded search against [Search Handler], using the contents of
;       [Display Field] (a comma-separated, priority-ordered field list) as
;       suggestions and sorting by [Sort Field].  Any additional parameters at the
;       end of the string are treated as an alternating sequence of field names and
;       values for use as filters against the suggestion list.  All parameters are
;       optional.  If omitted, [Search Handler] will use the default Solr field,
;       [Display Field] will use "title", [Sort Field] will use relevance and no
;       filters will be applied.
; SolrCNAutocomplete
;       A customized version of SolrAutocomplete designed for smart handling of
;       call numbers using the custom CallNumber search handler.
; TagAutocomplete
;       Provide suggestions from the local database of tags.
;
; You can build your own autocomplete modules if you wish.  See the developer's
; guide here:
;
;       https://vufind.org/wiki/configuration:autocomplete
[Autocomplete]
; Set this to false to disable all autocomplete behavior
enabled = true
; This handler will be used for all search types not covered by [Autocomplete_Types]
default_handler = SolrAutocomplete

; In this section, set the key equal to a search handler from searchspecs.yaml and
; the value equal to an autocomplete handler in order to customize autocompletion
; behavior when that search type is selected.
[Autocomplete_Types]
Title = "SolrAutocomplete:Title"
JournalTitle = "SolrAutocomplete:JournalTitle"
Author = "SolrAutocomplete:Author:author,author2"
Subject = "SolrAutocomplete:Subject:topic,genre,geographic,era"
CallNumber = "SolrCNAutocomplete"
ISN = "SolrAutocomplete:ISN:isbn,issn"
tag = "TagAutocomplete"

; When snippets are enabled, this section can be used to display captions based on
; the Solr fields from which the snippets were obtained.  Keys are the names of Solr
; fields and values are strings to display to the user.  Note that all displayed
; strings are subject to translation and should be accounted for in the language
; files found in web/lang if you are in a multilingual environment.  Fields that are
; not listed in this section will be displayed without captions, so you can comment
; out the whole section to disable captions.
[Snippet_Captions]
author2 = "Other Authors"
contents = "Table of Contents"
topic = "Subjects"

; Fields must be stripped if you have a field in your main index which is missing
; from any index includable by shards.  This section can be ignored if you are
; not using sharding or if all of your shards have identical schemas.
;
; Put in the fields to strip here in the following format:
; shard name = fieldname,another fieldname,...
[StripFields]

; This section defines the view options available on standard search results.
; If only one view is required, set default_view under [General] above, and
; leave this section commented out.
;[Views]
;list = List
;grid = Grid

; This section allows for adding hidden filters. Each filter will be translated
; to format 'key:"value"' and added by Solr.php as a hidden filter (a facet that
; is always applied but is not seen by the user).  This is useful if you use a
; shared Solr index and need to display different subsets in different contexts
; (for example, a union catalog with separate VuFind instances each member).
[HiddenFilters]
;institution = "MyInstitution"
