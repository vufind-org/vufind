[Catalog]
host        = catalog.library.myuniversity.edu
port        = 1521
service     = VGER.catalog.library.myuniversity.edu
user        = myusername
password    = mypassword
database    = MYDB
pwebrecon   = http://catalog.library.myuniversity.edu/cgi-bin/Pwebrecon.cgi

; If this is set to false, VuFind will connect to Voyager's Oracle database with
; SERVICE_NAME in the connection string.  If set to true, it will use SID.  If
; you have connection problems, try changing this setting.
connect_with_sid = false

; The field in the PATRON table to use as a password when authenticating users;
; recommended values are LAST_NAME or PATRON_PIN (LAST_NAME is default)
login_field = LAST_NAME

; These settings affect the Fund list used as a limiter in the "new items" module:
[Funds]
; Uncomment this line to turn off the fund list entirely.
;disabled = true

; This setting can be used to limit the fund list to those that are under a specific
; fund.  Set it to 0 for top-level funds only.  Set it to a FUND_ID deeper in the
; fund tree to filter out unwanted values.  Leave it commented out to get all funds.
;parent_fund = 0

; These settings are used by the Voyager Restful Services - details at
; http://www.exlibrisgroup.org/display/VoyagerOI/Introduction+to+Voyager+RESTful+APIs
[WebServices]
host = 1.2.3.4
port = 7014
app = vxws

; Patron and site information -- these two settings can often be set to the same value.  To
; find your possible values, use the GetUBSitesService service as documented here:
; http://www.exlibrisgroup.org/display/VoyagerOI/GetUBSitesService
patronHomeUbId = "1@XXXXX"
dbKey = "1@XXXXX"

; This section is used to define library codes and named values which are used by the
; system to indicate the location at which a hold is to be collected. If you leave it
; commented out, a list will automatically be generated using the getPickUpLocations
; method.  Your system will perform better if you fill this in, since it will reduce
; the number of database lookups necessary when presenting the hold form.
;[pickUpLocations]
;1 = "Library One"
;2 = "Library Two"
;3 = "Library Three"

; This section controls hold behavior; note that you must also ensure that Holds are
; enabled in the [Catalog] section of config.ini in order to take advantage of these
; settings.
[Holds]
; If a colon separated list of item statuses is provided here, only matching items
; will show hold / recall links.  Skip this setting to allow all statuses.
;valid_hold_statuses = Charged:Renewed:Overdue

; non_borrowable - If a colon-separated list of ids from the ITEM_TYPES table is
; provided, matching items will be excluded from holds / recalls.  Skip this setting
; to allow links for all item types.
;non_borrowable = 2:4:23:10

; HMACKeys - A list of hold form element names that will be analyzed for consistency
; during hold form processing. Most users should not need to change this setting.
HMACKeys = item_id:holdtype:level

; defaultRequiredDate - A colon-separated list used to set the default "not required
; after" date for holds in the format days:months:years
; e.g. 0:1:0 will set a "not required after" date of 1 month from the current date
defaultRequiredDate = 0:1:0

; extraHoldFields - A colon-separated list used to display extra visible fields in the
; place holds form. Supported values are "comments", "requiredByDate" and
; "pickUpLocation"
extraHoldFields = comments:requiredByDate:pickUpLocation

; A Pick Up Location Code used to pre-select the pick up location drop down list and
; provide a default option if others are not available. Must correspond with one of
; the Location IDs returned by getPickUpLocations()
defaultPickUpLocation = "1"

; The maximum number of holding items to generate request links for. The process of
; checking the API for a valid hold is intensive. Any hold items above this this
; limit will have their hold status checked via ajax or when a user clicks on the
; link. Use "0" to check all items via ajax. Default is 15.
holdCheckLimit = 15

; This section controls renewal behavior.
[Renewals]
; If this is set to true, we will only display "renewal" checkboxes if items are able
; to be renewed.  This may cause the "checked out items" screen to take a long time
; to display.  If you set this to false, all items will have renewal checkboxes and
; we will only check validity if a user attempts a renewal -- faster, but less
; accurate.
checkUpFront = true